@startuml

    namespace nl.talsmasoftware.umldoclet.rendering {

        abstract class Renderer {
            #Renderer(DiagramRenderer)
            +writeTo(Writer): Writer
            #writeChildrenTo(IndentingPrintWriter): IndentingPrintWriter
            #lastChild(): Renderer
            {static} #writeTypeTo(IndentingPrintWriter, Type): IndentingPrintWriter
            {static} +quoted(String): String
            {abstract} #writeTo(IndentingPrintWriter): IndentingPrintWriter
        }

        abstract class ParentAwareRenderer {
            #ParentAwareRenderer(Renderer)
        }

        class PackageRenderer {
            #packageDoc: PackageDoc
            #PackageRenderer(DiagramRenderer, PackageDoc)
            #writeTo(IndentingPrintWriter): IndentingPrintWriter
        }

        class NoteRenderer {
            #note: String
            #NoteRenderer(Renderer, String)
            #writeTo(IndentingPrintWriter): IndentingPrintWriter
        }

        class MethodRenderer {
            #methodDoc: ExecutableMemberDoc
            #MethodRenderer(DiagramRenderer, ExecutableMemberDoc)
            #includeMethod(): boolean
            #writeNameTo(IndentingPrintWriter): IndentingPrintWriter
            #writeParametersTo(IndentingPrintWriter): IndentingPrintWriter
            #writeTo(IndentingPrintWriter): IndentingPrintWriter
            #propertyName(): String
            #propertyType(): Type
        }

        enum LegacyTag {
            {static} +EXTENDS
            {static} +IMPLEMENTS
            {static} +ASSOC
            {static} +NAVASSOC
            {static} +DEPEND
        }

        class FieldRenderer {
            #fieldDoc: FieldDoc
            #FieldRenderer(DiagramRenderer, FieldDoc)
            #includeFieldType(): boolean
            #includeField(): boolean
            #writeNameTo(IndentingPrintWriter): IndentingPrintWriter
            #writeTo(IndentingPrintWriter): IndentingPrintWriter
        }

        class DiagramRenderer {
            #config: UMLDocletConfig
            +DiagramRenderer(UMLDocletConfig)
            +addClass(ClassDoc): DiagramRenderer
            +addPackage(PackageDoc): DiagramRenderer
            +addDependencyDiagram(Object): DiagramRenderer
            #writeTo(IndentingPrintWriter): IndentingPrintWriter
        }

        class CommandRenderer {
            #command: String
            #CommandRenderer(DiagramRenderer, String)
            #writeTo(IndentingPrintWriter): IndentingPrintWriter
        }

        class ClassRenderer {
            #classDoc: ClassDoc
            #ClassRenderer(Renderer, ClassDoc)
            #umlType(): String
            {static} #umlTypeOf(ClassDoc): String
            #writeGenericsTo(IndentingPrintWriter): IndentingPrintWriter
            {static} #writeGenericsOf(ClassDoc, IndentingPrintWriter): IndentingPrintWriter
            #writeNotesTo(IndentingPrintWriter): IndentingPrintWriter
            #name(): String
            #nameOf(String): String
            #simplifyClassnameWithinPackage(String): String
            #writeNameTo(IndentingPrintWriter): IndentingPrintWriter
            #writeTo(IndentingPrintWriter): IndentingPrintWriter
        }

        class ClassReferenceRenderer {
            #reference: Reference
            #ClassReferenceRenderer(ClassRenderer, String, String)
            #ClassReferenceRenderer(ClassRenderer, Reference)
            #writeTypeDeclarationsTo(IndentingPrintWriter): IndentingPrintWriter
            #isSelfReference(): boolean
            #addNote(String): void
            #writeTo(IndentingPrintWriter): IndentingPrintWriter
        }

        class ClassPropertyRenderer {
            #ClassPropertyRenderer(ClassRenderer, ClassDoc, String)
        }

        Renderer <|-- ParentAwareRenderer

        Renderer <|-- PackageRenderer

        ParentAwareRenderer <|-- NoteRenderer

        Renderer <|-- MethodRenderer

        Renderer <|-- FieldRenderer

        Renderer <|-- DiagramRenderer

        Renderer <|-- CommandRenderer

        ParentAwareRenderer <|-- ClassRenderer

        ClassRenderer <|-- ClassReferenceRenderer

        ClassReferenceRenderer <|-- ClassPropertyRenderer

        Renderer --> DiagramRenderer: diagram

        Renderer --> "*" Renderer: children

        ParentAwareRenderer --> Renderer: parent\npreviousSibling\nnextSibling

        ClassReferenceRenderer --> ClassRenderer: parent

    }

@enduml
